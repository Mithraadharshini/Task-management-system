{"ast":null,"code":"var _jsxFileName = \"/Users/mithraa/Documents/task-management-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { AuthProvider } from './contexts/AuthContext';\nimport MainApp from './components/MainApp';\nimport { Brightness4, Brightness7 } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '' : '#1f1f1f' // ðŸ’¡ Change these to your desired light/dark header colors\n      },\n      background: {\n        default: mode === 'light' ? '#fafafa' : '#121212',\n        paper: mode === 'light' ? '#fff' : '#1e1e1e'\n      }\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthProvider, {\n        children: /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useState","ThemeProvider","createTheme","CssBaseline","AuthProvider","MainApp","Brightness4","Brightness7","jsxDEV","_jsxDEV","ColorModeContext","createContext","toggleColorMode","App","_s","mode","setMode","colorMode","prevMode","theme","palette","primary","main","background","default","paper","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mithraa/Documents/task-management-system/frontend/src/App.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { AuthProvider } from './contexts/AuthContext';\nimport MainApp from './components/MainApp';\nimport { Brightness4, Brightness7 } from '@mui/icons-material';\n\nexport const ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    []\n  );\n\n const theme = useMemo(\n  () =>\n    createTheme({\n      palette: {\n        mode,\n        primary: {\n          main: mode === 'light' ? '' : '#1f1f1f', // ðŸ’¡ Change these to your desired light/dark header colors\n        },\n        background: {\n          default: mode === 'light' ? '#fafafa' : '#121212',\n          paper: mode === 'light' ? '#fff' : '#1e1e1e',\n        },\n      },\n    }),\n  [mode]\n);\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AuthProvider>\n          <MainApp />\n        </AuthProvider>\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAChD,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,MAAMC,gBAAgB,gBAAGZ,KAAK,CAACa,aAAa,CAAC;EAAEC,eAAe,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAElF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMiB,SAAS,GAAGlB,OAAO,CACvB,OAAO;IACLa,eAAe,EAAEA,CAAA,KAAM;MACrBI,OAAO,CAAEE,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;IAClE;EACF,CAAC,CAAC,EACF,EACF,CAAC;EAEF,MAAMC,KAAK,GAAGpB,OAAO,CACpB,MACEG,WAAW,CAAC;IACVkB,OAAO,EAAE;MACPL,IAAI;MACJM,OAAO,EAAE;QACPC,IAAI,EAAEP,IAAI,KAAK,OAAO,GAAG,EAAE,GAAG,SAAS,CAAE;MAC3C,CAAC;MACDQ,UAAU,EAAE;QACVC,OAAO,EAAET,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;QACjDU,KAAK,EAAEV,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG;MACrC;IACF;EACF,CAAC,CAAC,EACJ,CAACA,IAAI,CACP,CAAC;EACC,oBACEN,OAAA,CAACC,gBAAgB,CAACgB,QAAQ;IAACC,KAAK,EAAEV,SAAU;IAAAW,QAAA,eAC1CnB,OAAA,CAACR,aAAa;MAACkB,KAAK,EAAEA,KAAM;MAAAS,QAAA,gBAC1BnB,OAAA,CAACN,WAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfvB,OAAA,CAACL,YAAY;QAAAwB,QAAA,eACXnB,OAAA,CAACJ,OAAO;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEhC;AAAClB,EAAA,CAtCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}