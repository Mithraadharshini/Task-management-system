{"ast":null,"code":"var _jsxFileName = \"/Users/mithraa/Documents/task-management-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { AuthProvider } from './contexts/AuthContext';\nimport MainApp from './components/MainApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: '#1976d2'\n      },\n      secondary: {\n        main: '#dc004e'\n      }\n    }\n  }), [mode]);\n  const toggleMode = () => {\n    setMode(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(MainApp, {\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u8zjN1kWJUDh6oH/uPWW9KokeTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","ThemeProvider","createTheme","CssBaseline","AuthProvider","MainApp","jsxDEV","_jsxDEV","App","_s","mode","setMode","theme","palette","primary","main","secondary","toggleMode","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mithraa/Documents/task-management-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { AuthProvider } from './contexts/AuthContext';\nimport MainApp from './components/MainApp';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const theme = useMemo(() =>\n    createTheme({\n      palette: {\n        mode,\n        primary: { main: '#1976d2' },\n        secondary: { main: '#dc004e' },\n      },\n    }), [mode]);\n\n  const toggleMode = () => {\n    setMode(prev => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthProvider>\n        <MainApp mode={mode} toggleMode={toggleMode} />\n      </AuthProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMa,KAAK,GAAGZ,OAAO,CAAC,MACpBE,WAAW,CAAC;IACVW,OAAO,EAAE;MACPH,IAAI;MACJI,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAU,CAAC;MAC5BC,SAAS,EAAE;QAAED,IAAI,EAAE;MAAU;IAC/B;EACF,CAAC,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEb,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBN,OAAO,CAACO,IAAI,IAAKA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACxD,CAAC;EAED,oBACEX,OAAA,CAACN,aAAa;IAACW,KAAK,EAAEA,KAAM;IAAAO,QAAA,gBAC1BZ,OAAA,CAACJ,WAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfhB,OAAA,CAACH,YAAY;MAAAe,QAAA,eACXZ,OAAA,CAACF,OAAO;QAACK,IAAI,EAAEA,IAAK;QAACO,UAAU,EAAEA;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB;AAACd,EAAA,CAxBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}