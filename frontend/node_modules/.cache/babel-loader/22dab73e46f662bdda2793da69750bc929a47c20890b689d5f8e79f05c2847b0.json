{"ast":null,"code":"var _jsxFileName = \"/Users/mithraa/Documents/task-management-system/frontend/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await authAPI.getCurrentUser();\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    const response = await authAPI.login(email, password);\n    const {\n      user,\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    setUser(user);\n    return response.data;\n  };\n  const register = async (email, password, name) => {\n    const response = await authAPI.register(email, password, name);\n    const {\n      user,\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    setUser(user);\n    return response.data;\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","response","getCurrentUser","data","error","removeItem","login","email","password","setItem","register","name","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/mithraa/Documents/task-management-system/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await authAPI.getCurrentUser();\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    const response = await authAPI.login(email, password);\n    const { user, token } = response.data;\n    localStorage.setItem('token', token);\n    setUser(user);\n    return response.data;\n  };\n\n  const register = async (email, password, name) => {\n    const response = await authAPI.register(email, password, name);\n    const { user, token } = response.data;\n    localStorage.setItem('token', token);\n    setUser(user);\n    return response.data;\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}