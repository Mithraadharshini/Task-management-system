{"ast":null,"code":"var _jsxFileName = \"/Users/mithraa/Documents/task-management-system/frontend/src/components/calendarView.jsx\";\n// src/components/CalendarView.jsx\nimport React from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport { format, parse, startOfWeek, getDay } from 'date-fns';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  'en-US': require('date-fns/locale/en-US')\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek: () => startOfWeek(new Date(), {\n    weekStartsOn: 1\n  }),\n  getDay,\n  locales\n});\nexport default function CalendarView({\n  tasks\n}) {\n  const events = tasks.filter(task => task.due_date).map(task => ({\n    title: task.title,\n    start: new Date(task.due_date),\n    end: new Date(task.due_date),\n    allDay: true\n  }));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"\\uD83D\\uDCC5 Calendar View of Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","Box","Paper","Typography","jsxDEV","_jsxDEV","locales","require","localizer","Date","weekStartsOn","CalendarView","tasks","events","filter","task","due_date","map","title","start","end","allDay","sx","p","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","startAccessor","endAccessor","style","_c","$RefreshReg$"],"sources":["/Users/mithraa/Documents/task-management-system/frontend/src/components/calendarView.jsx"],"sourcesContent":["// src/components/CalendarView.jsx\nimport React from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport { format, parse, startOfWeek, getDay } from 'date-fns';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Box, Paper, Typography } from '@mui/material';\n\nconst locales = {\n  'en-US': require('date-fns/locale/en-US'),\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek: () => startOfWeek(new Date(), { weekStartsOn: 1 }),\n  getDay,\n  locales,\n});\n\nexport default function CalendarView({ tasks }) {\n  const events = tasks\n    .filter((task) => task.due_date)\n    .map((task) => ({\n      title: task.title,\n      start: new Date(task.due_date),\n      end: new Date(task.due_date),\n      allDay: true,\n    }));\n\n  return (\n    <Paper sx={{ p: 2, mt: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        ðŸ“… Calendar View of Tasks\n      </Typography>\n      <Box sx={{ height: 500 }}>\n        <Calendar\n          localizer={localizer}\n          events={events}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: '100%' }}\n        />\n      </Box>\n    </Paper>\n  );\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC/D,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,MAAM,QAAQ,UAAU;AAC7D,OAAO,mDAAmD;AAC1D,SAASC,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAG;EACd,OAAO,EAAEC,OAAO,CAAC,uBAAuB;AAC1C,CAAC;AAED,MAAMC,SAAS,GAAGZ,gBAAgB,CAAC;EACjCC,MAAM;EACNC,KAAK;EACLC,WAAW,EAAEA,CAAA,KAAMA,WAAW,CAAC,IAAIU,IAAI,CAAC,CAAC,EAAE;IAAEC,YAAY,EAAE;EAAE,CAAC,CAAC;EAC/DV,MAAM;EACNM;AACF,CAAC,CAAC;AAEF,eAAe,SAASK,YAAYA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,MAAM,GAAGD,KAAK,CACjBE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAC/BC,GAAG,CAAEF,IAAI,KAAM;IACdG,KAAK,EAAEH,IAAI,CAACG,KAAK;IACjBC,KAAK,EAAE,IAAIV,IAAI,CAACM,IAAI,CAACC,QAAQ,CAAC;IAC9BI,GAAG,EAAE,IAAIX,IAAI,CAACM,IAAI,CAACC,QAAQ,CAAC;IAC5BK,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;EAEL,oBACEhB,OAAA,CAACH,KAAK;IAACoB,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACzBpB,OAAA,CAACF,UAAU;MAACuB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA,CAACJ,GAAG;MAACqB,EAAE,EAAE;QAAEU,MAAM,EAAE;MAAI,CAAE;MAAAP,QAAA,eACvBpB,OAAA,CAACV,QAAQ;QACPa,SAAS,EAAEA,SAAU;QACrBK,MAAM,EAAEA,MAAO;QACfoB,aAAa,EAAC,OAAO;QACrBC,WAAW,EAAC,KAAK;QACjBC,KAAK,EAAE;UAAEH,MAAM,EAAE;QAAO;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAACK,EAAA,GA1BuBzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}